\documentclass{article}
\usepackage{verbatim}
\usepackage[utf8]{inputenc}
\usepackage[german]{babel}
\usepackage{parskip}
\usepackage{colortbl}
\definecolor{orange}{rgb}{1,0.647,0}
\begin{document}
\setlength{\arrayrulewidth}{.8pt}
\tableofcontents 

\section{Klasse TemplateExpander::Expander}

\subsection{Öffentliche statische Methoden}

\subsubsection{Funktion Expansion}

\begin{verbatim}string Expansion
(
    string format
    string templatesDirectory
    XmlNode root
    Parameters parameters
)
\end{verbatim}

\subsection{Private statische Methoden}

\subsubsection{Funktion Accept}

Checks, if the node is accepted for processing.

\begin{verbatim}bool Accept
(
    XmlNode node
    Parameters parameters
)
\end{verbatim}

\begin{tabular}{|c|c|} 
\hline
\cellcolor{orange} Name & \cellcolor{orange} Beschreibung \\
\hline
node & Node \\
\hline
parameters & Parameters \\
\hline

\end{tabular}

\subsubsection*{Rückgabewert}

true if the node ist accepted; otherwise, false.

\subsubsection{Funktion AddExpansion}

\begin{verbatim}void AddExpansion
(
    Strings expansions
    string key
    string value
    Parameters parameters
)
\end{verbatim}

\subsubsection{Funktion AddExpansions}

\begin{verbatim}void AddExpansions
(
    string format
    IEnumerable nodes
    bool isValueTemplate
    bool prefixVariable
    Strings expansions
    Parameters parameters
    Strings templates
    StringsStack stringsStack
)
\end{verbatim}

\subsubsection{Funktion CleanValue}

Cleans string.

\begin{verbatim}string CleanValue
(
    string value
    bool removeCarriageReturn
)
\end{verbatim}

\begin{tabular}{|c|c|} 
\hline
\cellcolor{orange} Name & \cellcolor{orange} Beschreibung \\
\hline
value & String to be cleaned. \\
\hline
removeCarriageReturn & Should carriage-returns be removed by replacing them with blanks? \\
\hline

\end{tabular}

\subsubsection*{Rückgabewert}

Cleaned string.

\subsubsection{Funktion Expansion}

\begin{verbatim}string Expansion
(
    string format
    XmlNode node
    Parameters parameters
    Strings templates
    StringsStack expansionsStack
)
\end{verbatim}

\subsubsection{Funktion GetFormats}

\begin{verbatim}HashSet< string > GetFormats
(
    HashSet< string > variables
)
\end{verbatim}

\subsubsection{Funktion GetTemplate}

\begin{verbatim}string GetTemplate
(
    string templateSet
    string tag
    Strings templates
)
\end{verbatim}

\subsubsection{Funktion GetVariables}

\begin{verbatim}HashSet< string > GetVariables
(
    string text
)
\end{verbatim}

\subsubsection{Funktion ReadTemplates}

\begin{verbatim}Strings ReadTemplates
(
    string templatesDirectory
)
\end{verbatim}

\subsubsection{Funktion RemoveVariables}

\begin{verbatim}string RemoveVariables
(
    string text
)
\end{verbatim}

\subsubsection{Funktion ReplaceExhaustive}

\begin{verbatim}string ReplaceExhaustive
(
    string value
    string searchString
    string replacement
)
\end{verbatim}

\subsubsection{Funktion ReplaceWord}

Replaces word in text.

\begin{verbatim}string ReplaceWord
(
    this string text
    string word
    string replacement
    RegexOptions options
)
\end{verbatim}

\begin{tabular}{|c|c|} 
\hline
\cellcolor{orange} Name & \cellcolor{orange} Beschreibung \\
\hline
text & Text \\
\hline
word & Word \\
\hline
replacement & Replacement \\
\hline
options & Options \\
\hline

\end{tabular}

\subsubsection*{Rückgabewert}

String with word replaced.

\end{document}